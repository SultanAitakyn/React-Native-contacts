{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\\\\task2 1\\\\AddContactForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport contacts from \"./contacts\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    minWidth: 100,\n    marginTop: 20,\n    marginHorizontal: 20,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 3\n  }\n});\n\nvar AddContactForm = function (_React$Component) {\n  _inherits(AddContactForm, _React$Component);\n\n  var _super = _createSuper(AddContactForm);\n\n  function AddContactForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddContactForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: '',\n      phone: '',\n      isFormValid: false\n    };\n\n    _this.handleNameChange = function (name) {\n      _this.setState({\n        name: name\n      });\n    };\n\n    _this.handlePhoneChange = function (phone) {\n      phone = phone.replace(/[.\\s]/g, '');\n\n      if (isNaN(phone)) {} else {\n        _this.setState({\n          phone: phone,\n          isFormValid: true\n        });\n      }\n    };\n\n    _this.onSaveContact = function () {\n      if (_this.state.isFormValid) {\n        contacts.push({\n          name: _this.state.name,\n          phone: _this.state.phone\n        });\n      }\n    };\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddContactForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.name,\n        onChangeText: this.handleNameChange,\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        keyboardType: \"numeric\",\n        style: styles.input,\n        value: this.state.phone,\n        onChangeText: this.handlePhoneChange,\n        placeholder: \"Phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Submit\",\n        onPress: this.onSaveContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AddContactForm;\n}(React.Component);\n\nexport { AddContactForm as default };","map":{"version":3,"sources":["E:/Загрузки/task2 1/AddContactForm.js"],"names":["React","contacts","styles","StyleSheet","create","container","flex","backgroundColor","paddingTop","input","borderWidth","borderColor","minWidth","marginTop","marginHorizontal","paddingHorizontal","paddingVertical","borderRadius","AddContactForm","props","state","name","phone","isFormValid","handleNameChange","setState","handlePhoneChange","replace","isNaN","onSaveContact","push","handleClick","bind","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,QAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,CADR;AAELC,IAAAA,WAAW,EAAE,OAFR;AAGLC,IAAAA,QAAQ,EAAE,GAHL;AAILC,IAAAA,SAAS,EAAE,EAJN;AAKLC,IAAAA,gBAAgB,EAAE,EALb;AAMLC,IAAAA,iBAAiB,EAAE,EANd;AAOLC,IAAAA,eAAe,EAAE,CAPZ;AAQLC,IAAAA,YAAY,EAAE;AART;AANwB,CAAlB,CAAf;;IAkBqBC,c;;;;;AACnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AADiB,UAKnBC,KALmB,GAKX;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,WAAW,EAAE;AAHP,KALW;;AAAA,UAWnBC,gBAXmB,GAWA,UAAAH,IAAI,EAAI;AACzB,YAAKI,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAJA;AAAD,OAAd;AACD,KAbkB;;AAAA,UAenBK,iBAfmB,GAeC,UAAAJ,KAAK,EAAI;AAC3BA,MAAAA,KAAK,GAAGA,KAAK,CAACK,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAR;;AACA,UAAGC,KAAK,CAACN,KAAD,CAAR,EAAgB,CAEf,CAFD,MAEK;AACH,cAAKG,QAAL,CAAc;AAACH,UAAAA,KAAK,EAALA,KAAD;AAAQC,UAAAA,WAAW,EAAE;AAArB,SAAd;AACD;AACF,KAtBkB;;AAAA,UAwBnBM,aAxBmB,GAwBH,YAAM;AACpB,UAAI,MAAKT,KAAL,CAAWG,WAAf,EAA4B;AAC1BtB,QAAAA,QAAQ,CAAC6B,IAAT,CAAc;AAACT,UAAAA,IAAI,EAAE,MAAKD,KAAL,CAAWC,IAAlB;AAAwBC,UAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWE;AAA1C,SAAd;AACD;AACF,KA5BkB;;AAEjB,UAAKS,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAFiB;AAGlB;;;;WA2BD,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE9B,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACO,KADhB;AAEE,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWC,IAFpB;AAGE,QAAA,YAAY,EAAE,KAAKG,gBAHrB;AAIE,QAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,SAAD;AACE,QAAA,YAAY,EAAC,SADf;AAEE,QAAA,KAAK,EAAEtB,MAAM,CAACO,KAFhB;AAGE,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWE,KAHpB;AAIE,QAAA,YAAY,EAAE,KAAKI,iBAJrB;AAKE,QAAA,WAAW,EAAC,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAcE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAE,KAAKG,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF;AAkBD;;;;EAlDyC7B,KAAK,CAACiC,S;;SAA7Bf,c","sourcesContent":["import React from 'react'\nimport {Button, StyleSheet, TextInput, View} from 'react-native'\nimport contacts from './contacts'\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: 20,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    minWidth: 100,\n    marginTop: 20,\n    marginHorizontal: 20,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 3,\n  },\n})\n\nexport default class AddContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  state = {\n    name: '',\n    phone: '',\n    isFormValid: false,\n  }\n\n  handleNameChange = name => {\n    this.setState({name})\n  }\n\n  handlePhoneChange = phone => {\n    phone = phone.replace(/[.\\s]/g, '');\n    if(isNaN(phone)){\n      // Its not a number\n    }else{\n      this.setState({phone, isFormValid: true})\n    }\n  }\n\n  onSaveContact = () => {\n    if (this.state.isFormValid) {\n      contacts.push({name: this.state.name, phone: this.state.phone});\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TextInput\n          style={styles.input}\n          value={this.state.name}\n          onChangeText={this.handleNameChange}\n          placeholder=\"Name\"\n        />\n        <TextInput\n          keyboardType=\"numeric\"\n          style={styles.input}\n          value={this.state.phone}\n          onChangeText={this.handlePhoneChange}\n          placeholder=\"Phone\"\n        />\n        <Button title=\"Submit\" onPress={this.onSaveContact}/>\n      </View>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}