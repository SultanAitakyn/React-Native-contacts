{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\\\\task2 1\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport contacts, { compareNames } from \"./contacts\";\nimport ScrollViewContacts from \"./ScrollViewContacts\";\nimport FlatListContacts from \"./FlatListContacts\";\nimport SectionListContacts from \"./SectionListContacts\";\nimport AddContactForm from \"./AddContactForm\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      showContacts: true,\n      showForm: false,\n      contacts: contacts\n    };\n\n    _this.toggleContacts = function () {\n      _this.setState(function (prevState) {\n        return {\n          showContacts: !prevState.showContacts\n        };\n      });\n    };\n\n    _this.sort = function () {\n      _this.setState(function (prevState) {\n        return {\n          contacts: prevState.contacts.sort(compareNames)\n        };\n      });\n    };\n\n    _this.showForm = function (value) {\n      _this.setState({\n        showForm: value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.showForm) return React.createElement(AddContactForm, {\n        showForm: this.showForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 37\n        }\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        title: \"toggle contacts\",\n        onPress: this.toggleContacts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"add contact\",\n        onPress: function onPress() {\n          return _this2.showForm(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), this.state.showContacts && React.createElement(SectionListContacts, {\n        contacts: this.state.contacts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: 20\n  }\n});","map":{"version":3,"sources":["E:/Загрузки/task2 1/App.js"],"names":["React","contacts","compareNames","ScrollViewContacts","FlatListContacts","SectionListContacts","AddContactForm","App","state","showContacts","showForm","toggleContacts","setState","prevState","sort","value","styles","container","Component","StyleSheet","create","flex","backgroundColor","paddingTop"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAIA,OAAOC,QAAP,IAAkBC,YAAlB;AACA,OAAOC,kBAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,cAAP;;IAEqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNT,MAAAA,QAAQ,EAAEA;AAHJ,K;;UAMRU,c,GAAiB,YAAM;AACrB,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAACJ,UAAAA,YAAY,EAAE,CAACI,SAAS,CAACJ;AAA1B,SAAL;AAAA,OAAvB;AACD,K;;UAEDK,I,GAAO,YAAM;AACX,YAAKF,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAACZ,UAAAA,QAAQ,EAAEY,SAAS,CAACZ,QAAV,CAAmBa,IAAnB,CAAwBZ,YAAxB;AAAX,SAAL;AAAA,OAAvB;AACD,K;;UAEDQ,Q,GAAW,UAACK,KAAD,EAAW;AACpB,YAAKH,QAAL,CAAc;AAACF,QAAAA,QAAQ,EAAEK;AAAX,OAAd;AACD,K;;;;;;;WAED,kBAAS;AAAA;;AACP,UAAI,KAAKP,KAAL,CAAWE,QAAf,EAAyB,OAAO,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAE,KAAKA,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACzB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAgC,QAAA,OAAO,EAAE,KAAKN,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,aAAd;AAA4B,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACD,QAAL,CAAc,IAAd,CAAN;AAAA,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,KAAKF,KAAL,CAAWC,YAAX,IAA2B,oBAAC,mBAAD;AAAqB,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWP,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAH9B,CADF;AAOD;;;;EA5B8BD,KAAK,CAACkB,S;;SAAlBX,G;AA+BrB,IAAMS,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE;AAHH;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Button, FlatList, ScrollView, StyleSheet, Text, View } from 'react-native';\n\n\nimport contacts, {compareNames} from './contacts'\nimport ScrollViewContacts from './ScrollViewContacts'\nimport FlatListContacts from './FlatListContacts'\nimport SectionListContacts from './SectionListContacts'\nimport AddContactForm from './AddContactForm'\n\nexport default class App extends React.Component {\n  state = {\n    showContacts: true,\n    showForm: false,\n    contacts: contacts,\n  }\n\n  toggleContacts = () => {\n    this.setState(prevState => ({showContacts: !prevState.showContacts}))\n  }\n\n  sort = () => {\n    this.setState(prevState => ({contacts: prevState.contacts.sort(compareNames)}))\n  }\n\n  showForm = (value) => {\n    this.setState({showForm: value})\n  }\n\n  render() {\n    if (this.state.showForm) return <AddContactForm showForm={this.showForm}/>\n    return (\n      <View style={styles.container}>\n        <Button title=\"toggle contacts\" onPress={this.toggleContacts} />\n        <Button title=\"add contact\" onPress={() => this.showForm(true)} />\n        {this.state.showContacts && <SectionListContacts contacts={this.state.contacts} />}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}