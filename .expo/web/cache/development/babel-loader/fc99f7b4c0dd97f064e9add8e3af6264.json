{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\\\\task2 1\\\\AddContactForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    minWidth: 100,\n    marginTop: 20,\n    marginHorizontal: 20,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 3\n  }\n});\n\nvar AddContactForm = function (_React$Component) {\n  _inherits(AddContactForm, _React$Component);\n\n  var _super = _createSuper(AddContactForm);\n\n  function AddContactForm() {\n    var _this;\n\n    _classCallCheck(this, AddContactForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: '',\n      phone: '',\n      isFormValid: false\n    };\n\n    _this.handleNameChange = function (name) {\n      _this.setState({\n        name: name\n      });\n    };\n\n    _this.handlePhoneChange = function (phone) {\n      if (/\\s*|^\\d+$/.test(phone)) {\n        _this.setState({\n          phone: phone\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddContactForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.name,\n        onChangeText: this.handleNameChange,\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        keyboardType: \"numeric\",\n        style: styles.input,\n        value: this.state.phone,\n        onChangeText: this.handlePhoneChange,\n        placeholder: \"Phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AddContactForm;\n}(React.Component);\n\nexport { AddContactForm as default };","map":{"version":3,"sources":["E:/Загрузки/task2 1/AddContactForm.js"],"names":["React","styles","StyleSheet","create","container","flex","backgroundColor","paddingTop","input","borderWidth","borderColor","minWidth","marginTop","marginHorizontal","paddingHorizontal","paddingVertical","borderRadius","AddContactForm","state","name","phone","isFormValid","handleNameChange","setState","handlePhoneChange","test","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAIA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,CADR;AAELC,IAAAA,WAAW,EAAE,OAFR;AAGLC,IAAAA,QAAQ,EAAE,GAHL;AAILC,IAAAA,SAAS,EAAE,EAJN;AAKLC,IAAAA,gBAAgB,EAAE,EALb;AAMLC,IAAAA,iBAAiB,EAAE,EANd;AAOLC,IAAAA,eAAe,EAAE,CAPZ;AAQLC,IAAAA,YAAY,EAAE;AART;AANwB,CAAlB,CAAf;;IAkBqBC,c;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,WAAW,EAAE;AAHP,K;;UAMRC,gB,GAAmB,UAAAH,IAAI,EAAI;AACzB,YAAKI,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAJA;AAAD,OAAd;AACD,K;;UAEDK,iB,GAAoB,UAAAJ,KAAK,EAAI;AAC3B,UAAI,YAAYK,IAAZ,CAAiBL,KAAjB,CAAJ,EAA6B;AAC3B,cAAKG,QAAL,CAAc;AAACH,UAAAA,KAAK,EAALA;AAAD,SAAd;AACD;AACF,K;;;;;;;WAED,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnB,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACO,KADhB;AAEE,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWC,IAFpB;AAGE,QAAA,YAAY,EAAE,KAAKG,gBAHrB;AAIE,QAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,SAAD;AACE,QAAA,YAAY,EAAC,SADf;AAEE,QAAA,KAAK,EAAErB,MAAM,CAACO,KAFhB;AAGE,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWE,KAHpB;AAIE,QAAA,YAAY,EAAE,KAAKI,iBAJrB;AAKE,QAAA,WAAW,EAAC,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAcE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF;AAkBD;;;;EApCyCxB,KAAK,CAAC0B,S;;SAA7BT,c","sourcesContent":["import React from 'react'\nimport {Button, StyleSheet, TextInput, View} from 'react-native'\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: 20,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'black',\n    minWidth: 100,\n    marginTop: 20,\n    marginHorizontal: 20,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 3,\n  },\n})\n\nexport default class AddContactForm extends React.Component {\n  state = {\n    name: '',\n    phone: '',\n    isFormValid: false,\n  }\n\n  handleNameChange = name => {\n    this.setState({name})\n  }\n\n  handlePhoneChange = phone => {\n    if (/\\s*|^\\d+$/.test(phone)) {\n      this.setState({phone})\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TextInput\n          style={styles.input}\n          value={this.state.name}\n          onChangeText={this.handleNameChange}\n          placeholder=\"Name\"\n        />\n        <TextInput\n          keyboardType=\"numeric\"\n          style={styles.input}\n          value={this.state.phone}\n          onChangeText={this.handlePhoneChange}\n          placeholder=\"Phone\"\n        />\n        <Button title=\"Submit\" />\n      </View>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}